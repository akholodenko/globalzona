<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<link rel="stylesheet" href="../../../../../../style.css" type="text/css" media="screen">
<link rel="stylesheet" href="../../../../../../print.css" type="text/css" media="print">
<meta content="BigInteger,com.myspace.sdk.oAuth.Hurlant.math.BigInteger,BI_FP,DB,DM,DV,F1,F2,FV,ONE,ZERO,a,lowprimes,lplim,s,t,abs,add,addTo,am,and,andNot,bitCount,bitLength,bitwiseTo,byteValue,changeBit,chunkSize,clamp,clearBit,clone,compareTo,copyTo,dAddOffset,dMultiply,dispose,divRemTo,divide,divideAndRemainder,dlShiftTo,drShiftTo,equals,exp,flipBit,fromArray,fromInt,fromRadix,gcd,getLowestSetBit,intAt,intValue,invDigit,isEven,isProbablePrime,lShiftTo,max,millerRabin,min,mod,modInt,modInverse,modPow,modPowInt,multiply,multiplyLowerTo,multiplyTo,multiplyUpperTo,nbi,nbits,nbv,negate,not,or,pow,primify,rShiftTo,remainder,setBit,shiftLeft,shiftRight,shortValue,sigNum,squareTo,subTo,subtract,testBit,toArray,toByteArray,toRadix,toString,valueOf,xor" name="keywords">
<title>com.myspace.sdk.oAuth.Hurlant.math.BigInteger</title>
</head>
<body>
<script type="text/javascript" language="javascript" src="../../../../../../asdoc.js"></script><script type="text/javascript" language="javascript" src="../../../../../../cookies.js"></script><script type="text/javascript" language="javascript">
<!--
				asdocTitle = 'BigInteger - MySpaceID AS3 SDK';
				var baseRef = '../../../../../../';
				window.onload = configPage;
			--></script>
<table style="display:none" id="titleTable" cellspacing="0" cellpadding="0" class="titleTable">
<tr>
<td align="left" class="titleTableTitle">MySpaceID AS3 SDK</td><td align="right" class="titleTableTopNav"><a onclick="loadClassListFrame('../../../../../../all-classes.html')" href="../../../../../../package-summary.html">All&nbsp;Packages</a>&nbsp;|&nbsp;<a onclick="loadClassListFrame('../../../../../../all-classes.html')" href="../../../../../../class-summary.html">All&nbsp;Classes</a>&nbsp;|&nbsp;<a onclick="loadClassListFrame('../../../../../../index-list.html')" href="../../../../../../all-index-A.html">Index</a>&nbsp;|&nbsp;<a href="../../../../../../index.html?com/myspace/sdk/oAuth/Hurlant/math/BigInteger.html&amp;com/myspace/sdk/oAuth/Hurlant/math/class-list.html" id="framesLink1">Frames</a><a onclick="parent.location=document.location" href="" style="display:none" id="noFramesLink1">No&nbsp;Frames</a></td><td rowspan="3" align="right" class="titleTableLogo"><img alt="Adobe Logo" title="Adobe Logo" class="logoImage" src="../../../../../../images/logo.jpg"></td>
</tr>
<tr class="titleTableRow2">
<td align="left" id="subTitle" class="titleTableSubTitle">Class&nbsp;BigInteger</td><td align="right" id="subNav" class="titleTableSubNav"><a href="#propertySummary">Properties</a>&nbsp;| <a href="#methodSummary">Methods</a>&nbsp;| <a href="#constantSummary">Constants</a></td>
</tr>
<tr class="titleTableRow3">
<td colspan="2">&nbsp;</td>
</tr>
</table>
<script type="text/javascript" language="javascript">
<!--
if (!isEclipse() || window.name != ECLIPSE_FRAME_NAME) {titleBar_setSubTitle("ClassÂ BigInteger"); titleBar_setSubNav(true,true,false,false,false,false,true,false,false,false,false,false,false,false);}
--></script>
<div class="MainContent">
<table cellspacing="0" cellpadding="0" class="classHeaderTable">
<tr>
<td class="classHeaderTableLabel">Package</td><td><a onclick="javascript:loadClassListFrame('class-list.html')" href="package-detail.html">com.myspace.sdk.oAuth.Hurlant.math</a></td>
</tr>
<tr>
<td class="classHeaderTableLabel">Class</td><td class="classSignature">public class BigInteger</td>
</tr>
<tr>
<td class="classHeaderTableLabel">Subclasses</td><td><a href="../util/der/Integer.html">Integer</a></td>
</tr>
</table>
<p></p>
<p></p>
<br>
<hr>
</div>
<a name="propertySummary"></a>
<div class="summarySection">
<div class="summaryTableTitle">Public Properties</div>
<table id="summaryTableProperty" class="summaryTable " cellpadding="3" cellspacing="0">
<tr>
<th>&nbsp;</th><th colspan="2">Property</th><th class="summaryTableOwnerCol">Defined&nbsp;by</th>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a class="signatureLink" href="#t">t</a> : int<div class="summaryTableDescription"></div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
</table>
</div>
<a name="methodSummary"></a>
<div class="summarySection">
<div class="summaryTableTitle">Public Methods</div>
<table id="summaryTableMethod" class="summaryTable " cellpadding="3" cellspacing="0">
<tr>
<th>&nbsp;</th><th colspan="2">Method</th><th class="summaryTableOwnerCol">Defined&nbsp;by</th>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#BigInteger()">BigInteger</a>(value:* = null, radix:int = 0)</div>
<div class="summaryTableDescription"></div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#abs()">abs</a>():<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription">
   |this|
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#add()">add</a>(a:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#and()">and</a>(a:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription"></div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#andNot()">andNot</a>(a:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription"></div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#bitCount()">bitCount</a>():int</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#bitLength()">bitLength</a>():int</div>
<div class="summaryTableDescription">
   returns the number of bits in this
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#byteValue()">byteValue</a>():int</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#clearBit()">clearBit</a>(n:int):<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#clone()">clone</a>():<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription"></div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#compareTo()">compareTo</a>(v:<a href="BigInteger.html">BigInteger</a>):int</div>
<div class="summaryTableDescription">
   return + if this > v, - if this < v, 0 if equal
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#dispose()">dispose</a>():void</div>
<div class="summaryTableDescription"></div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#divide()">divide</a>(a:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#divideAndRemainder()">divideAndRemainder</a>(a:<a href="BigInteger.html">BigInteger</a>):Array</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#equals()">equals</a>(a:<a href="BigInteger.html">BigInteger</a>):Boolean</div>
<div class="summaryTableDescription"></div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#flipBit()">flipBit</a>(n:int):<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#gcd()">gcd</a>(a:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#getLowestSetBit()">getLowestSetBit</a>():int</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#intValue()">intValue</a>():int</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#isProbablePrime()">isProbablePrime</a>(t:int):Boolean</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#max()">max</a>(a:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription"></div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#min()">min</a>(a:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription"></div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#mod()">mod</a>(v:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#modInverse()">modInverse</a>(m:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#modPow()">modPow</a>(e:<a href="BigInteger.html">BigInteger</a>, m:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#modPowInt()">modPowInt</a>(e:int, m:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription">
   this^e % m, 0 <= e < 2^32
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#multiply()">multiply</a>(a:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#nbv()">nbv</a>(value:int):<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription">[static]
   return bigint initialized to value
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#negate()">negate</a>():<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription">
   -this
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#not()">not</a>():<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription"></div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#or()">or</a>(a:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription"></div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#pow()">pow</a>(e:int):<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#primify()">primify</a>(bits:int, t:int):void</div>
<div class="summaryTableDescription">
   Tweak our BigInteger until it looks prime enough
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#remainder()">remainder</a>(a:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription"></div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#setBit()">setBit</a>(n:int):<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#shiftLeft()">shiftLeft</a>(n:int):<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription"></div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#shiftRight()">shiftRight</a>(n:int):<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription"></div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#shortValue()">shortValue</a>():int</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#sigNum()">sigNum</a>():int</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#subtract()">subtract</a>(a:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#testBit()">testBit</a>(n:int):Boolean</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#toArray()">toArray</a>(array:ByteArray):uint</div>
<div class="summaryTableDescription"></div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#toByteArray()">toByteArray</a>():ByteArray</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#toString()">toString</a>(radix:Number = 16):String</div>
<div class="summaryTableDescription"></div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#valueOf()">valueOf</a>():Number</div>
<div class="summaryTableDescription">
   best-effort attempt to fit into a Number.</div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#xor()">xor</a>(a:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription"></div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
</table>
</div>
<a name="protectedMethodSummary"></a>
<div class="summarySection">
<div class="summaryTableTitle">Protected Methods</div>
<table id="summaryTableProtectedMethod" class="summaryTable " cellpadding="3" cellspacing="0">
<tr>
<th>&nbsp;</th><th colspan="2">Method</th><th class="summaryTableOwnerCol">Defined&nbsp;by</th>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#addTo()">addTo</a>(a:<a href="BigInteger.html">BigInteger</a>, r:<a href="BigInteger.html">BigInteger</a>):void</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#bitwiseTo()">bitwiseTo</a>(a:<a href="BigInteger.html">BigInteger</a>, op:Function, r:<a href="BigInteger.html">BigInteger</a>):void</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#changeBit()">changeBit</a>(n:int, op:Function):<a href="../math/BigInteger.html">BigInteger</a>
</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#chunkSize()">chunkSize</a>(r:Number):int</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#fromRadix()">fromRadix</a>(s:String, b:int = 10):void</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#millerRabin()">millerRabin</a>(t:int):Boolean</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#modInt()">modInt</a>(n:int):int</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#nbi()">nbi</a>():*</div>
<div class="summaryTableDescription"></div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#toRadix()">toRadix</a>(b:uint = 10):String</div>
<div class="summaryTableDescription">
   
   </div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
</table>
</div>
<a name="constantSummary"></a>
<div class="summarySection">
<div class="summaryTableTitle">Public Constants</div>
<table id="summaryTableConstant" class="summaryTable " cellpadding="3" cellspacing="0">
<tr>
<th>&nbsp;</th><th colspan="2">Constant</th><th class="summaryTableOwnerCol">Defined&nbsp;by</th>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a class="signatureLink" href="#BI_FP">BI_FP</a> : int = 52<div class="summaryTableDescription">[static]</div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a class="signatureLink" href="#DB">DB</a> : int = 30<div class="summaryTableDescription">[static]</div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a class="signatureLink" href="#DM">DM</a> : int<div class="summaryTableDescription">[static]</div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a class="signatureLink" href="#DV">DV</a> : int<div class="summaryTableDescription">[static]</div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a class="signatureLink" href="#F1">F1</a> : int = 22.0<div class="summaryTableDescription">[static]</div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a class="signatureLink" href="#F2">F2</a> : int = 8.0<div class="summaryTableDescription">[static]</div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a class="signatureLink" href="#FV">FV</a> : Number<div class="summaryTableDescription">[static]</div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a class="signatureLink" href="#lowprimes">lowprimes</a> : Array<div class="summaryTableDescription">[static]</div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a class="signatureLink" href="#lplim">lplim</a> : int<div class="summaryTableDescription">[static]</div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a class="signatureLink" href="#ONE">ONE</a> : <a href="../math/BigInteger.html">BigInteger</a>
<div class="summaryTableDescription">[static]</div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a class="signatureLink" href="#ZERO">ZERO</a> : <a href="../math/BigInteger.html">BigInteger</a>
<div class="summaryTableDescription">[static]</div>
</td><td class="summaryTableOwnerCol">BigInteger</td>
</tr>
</table>
</div>
<script type="text/javascript" language="javascript">
<!--
showHideInherited();
--></script>
<div class="MainContent">
<a name="propertyDetail"></a>
<div class="detailSectionHeader">Property detail</div>
<a name="a"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">a</td><td class="detailHeaderType">property</td>
</tr>
</table>
<div class="detailBody">
<code>bi_internal var a:Array</code>
</div>
<a name="s"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">s</td><td class="detailHeaderType">property</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>bi_internal var s:int</code>
</div>
<a name="t"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">t</td><td class="detailHeaderType">property</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public var t:int</code>
</div>
<a name="constructorDetail"></a>
<div class="detailSectionHeader">Constructor detail</div>
<a name="BigInteger()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">BigInteger</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">constructor</td>
</tr>
</table>
<div class="detailBody">
<code>public function BigInteger(value:* = null, radix:int = 0)</code><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">value</span>:*</code> (default = <code>null</code>)<code></code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">radix</span>:int</code> (default = <code>0</code>)<code></code></td>
</tr>
</table>
</div>
<a name="methodDetail"></a>
<div class="detailSectionHeader">Method detail</div>
<a name="abs()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">abs</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td>
</tr>
</table>
<div class="detailBody">
<code>public function abs():<a href="../math/BigInteger.html">BigInteger</a></code><p>
   |this|
   </p><p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
</div>
<a name="add()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">add</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function add(a:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a></code><p>
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">a</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code> &mdash; 
                        this + a
   
   
                        
                     </td>
</tr>
</table>
</div>
<a name="addTo()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">addTo</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>protected function addTo(a:<a href="BigInteger.html">BigInteger</a>, r:<a href="BigInteger.html">BigInteger</a>):void</code><p>
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">a</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">r</span>:<a href="BigInteger.html">BigInteger</a></code> &mdash; = this + a
   
   </td>
</tr>
</table>
</div>
<a name="am()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">am</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>bi_internal function am(i:int, x:int, w:<a href="BigInteger.html">BigInteger</a>, j:int, c:int, n:int):int</code><p>
   am: Compute w_j += (xhis_i), propagates carries,
   c is initial carry, returns final carry.
   c < 3value, x < 2value, this_i < dvalue
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">i</span>:int</code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">x</span>:int</code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">w</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">j</span>:int</code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">c</span>:int</code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">n</span>:int</code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>int</code></td>
</tr>
</table>
</div>
<a name="and()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">and</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function and(a:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a></code><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">a</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
</div>
<a name="andNot()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">andNot</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function andNot(a:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a></code><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">a</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
</div>
<a name="bitCount()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">bitCount</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function bitCount():int</code><p>
   
   </p><p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>int</code> &mdash; number of set bits
   
   </td>
</tr>
</table>
</div>
<a name="bitLength()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">bitLength</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function bitLength():int</code><p>
   returns the number of bits in this
   </p><p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>int</code></td>
</tr>
</table>
</div>
<a name="bitwiseTo()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">bitwiseTo</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>protected function bitwiseTo(a:<a href="BigInteger.html">BigInteger</a>, op:Function, r:<a href="BigInteger.html">BigInteger</a>):void</code><p>
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">a</span>:<a href="BigInteger.html">BigInteger</a></code> &mdash; a BigInteger to perform the operation with
   </td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">op</span>:Function</code> &mdash; a Function implementing the operation
   </td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">r</span>:<a href="BigInteger.html">BigInteger</a></code> &mdash; a BigInteger to store the result of the operation
   
   </td>
</tr>
</table>
</div>
<a name="byteValue()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">byteValue</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function byteValue():int</code><p>
   
   </p><p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>int</code> &mdash; value as byte
   
   </td>
</tr>
</table>
</div>
<a name="changeBit()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">changeBit</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>protected function changeBit(n:int, op:Function):<a href="../math/BigInteger.html">BigInteger</a></code><p>
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">n</span>:int</code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">op</span>:Function</code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code> &mdash; 
                        this op (1<<n)
   
   
                        
                     </td>
</tr>
</table>
</div>
<a name="chunkSize()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">chunkSize</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>protected function chunkSize(r:Number):int</code><p>
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">r</span>:Number</code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>int</code> &mdash; x s.t. r^x < DV
   
   </td>
</tr>
</table>
</div>
<a name="clamp()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">clamp</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>bi_internal function clamp():void</code><p>
   clamp off excess high words
   </p></div>
<a name="clearBit()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">clearBit</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function clearBit(n:int):<a href="../math/BigInteger.html">BigInteger</a></code><p>
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">n</span>:int</code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code> &mdash; 
                        this & ~(1<<n)
   
   
                        
                     </td>
</tr>
</table>
</div>
<a name="clone()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">clone</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function clone():<a href="../math/BigInteger.html">BigInteger</a></code>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
</div>
<a name="compareTo()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">compareTo</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function compareTo(v:<a href="BigInteger.html">BigInteger</a>):int</code><p>
   return + if this > v, - if this < v, 0 if equal
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">v</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>int</code></td>
</tr>
</table>
</div>
<a name="copyTo()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">copyTo</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>bi_internal function copyTo(r:<a href="BigInteger.html">BigInteger</a>):void</code><p>
   copy this to r
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">r</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
</div>
<a name="dAddOffset()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">dAddOffset</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>bi_internal function dAddOffset(n:int, w:int):void</code><p>
   
   this += n << w words, this >= 0
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">n</span>:int</code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">w</span>:int</code></td>
</tr>
</table>
</div>
<a name="dispose()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">dispose</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function dispose():void</code>
</div>
<a name="divide()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">divide</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function divide(a:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a></code><p>
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">a</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code> &mdash; 
                        this / a
   
   
                        
                     </td>
</tr>
</table>
</div>
<a name="divideAndRemainder()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">divideAndRemainder</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function divideAndRemainder(a:<a href="BigInteger.html">BigInteger</a>):Array</code><p>
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">a</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>Array</code> &mdash; [this/a, this%a]
   
   </td>
</tr>
</table>
</div>
<a name="divRemTo()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">divRemTo</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>bi_internal function divRemTo(m:<a href="BigInteger.html">BigInteger</a>, q:<a href="BigInteger.html">BigInteger</a> = null, r:<a href="BigInteger.html">BigInteger</a> = null):void</code><p>
   divide this by m, quotient and remainder to q, r (HAC 14.20)
   r != q, this != m. q or r may be null.
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">m</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">q</span>:<a href="BigInteger.html">BigInteger</a></code> (default = <code>null</code>)<code></code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">r</span>:<a href="BigInteger.html">BigInteger</a></code> (default = <code>null</code>)<code></code></td>
</tr>
</table>
</div>
<a name="dlShiftTo()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">dlShiftTo</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>bi_internal function dlShiftTo(n:int, r:<a href="BigInteger.html">BigInteger</a>):void</code><p>
   r = this << nB
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">n</span>:int</code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">r</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
</div>
<a name="dMultiply()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">dMultiply</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>bi_internal function dMultiply(n:int):void</code><p>
   
   this  n, this >=0, 1 < n < DV
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">n</span>:int</code></td>
</tr>
</table>
</div>
<a name="drShiftTo()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">drShiftTo</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>bi_internal function drShiftTo(n:int, r:<a href="BigInteger.html">BigInteger</a>):void</code><p>
   r = this >> nB
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">n</span>:int</code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">r</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
</div>
<a name="equals()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">equals</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function equals(a:<a href="BigInteger.html">BigInteger</a>):Boolean</code><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">a</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>Boolean</code></td>
</tr>
</table>
</div>
<a name="exp()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">exp</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>bi_internal function exp(e:int, z:IReduction):<a href="../math/BigInteger.html">BigInteger</a></code><p>
   this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">e</span>:int</code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">z</span>:IReduction</code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
</div>
<a name="flipBit()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">flipBit</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function flipBit(n:int):<a href="../math/BigInteger.html">BigInteger</a></code><p>
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">n</span>:int</code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code> &mdash; 
                        this ^ (1<<n)
   
   
                        
                     </td>
</tr>
</table>
</div>
<a name="fromArray()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">fromArray</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>bi_internal function fromArray(value:ByteArray, length:int):void</code><p>
   set from ByteArray and length,
   starting a current position
   If length goes beyond the array, pad with zeroes.
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">value</span>:ByteArray</code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">length</span>:int</code></td>
</tr>
</table>
</div>
<a name="fromInt()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">fromInt</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>bi_internal function fromInt(value:int):void</code><p>
   set from integer value "value", -DV <= value < DV
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">value</span>:int</code></td>
</tr>
</table>
</div>
<a name="fromRadix()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">fromRadix</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>protected function fromRadix(s:String, b:int = 10):void</code><p>
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">s</span>:String</code> &mdash; a string to convert from using radix.
   </td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">b</span>:int</code> (default = <code>10</code>)<code></code> &mdash; a radix
   
   </td>
</tr>
</table>
</div>
<a name="gcd()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">gcd</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function gcd(a:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a></code><p>
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">a</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code> &mdash; 
                        gcd(this, a) (HAC 14.54)
   
   
                        
                     </td>
</tr>
</table>
</div>
<a name="getLowestSetBit()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">getLowestSetBit</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function getLowestSetBit():int</code><p>
   
   </p><p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>int</code> &mdash; index of lowest 1-bit (or -1 if none)
   
   </td>
</tr>
</table>
</div>
<a name="intAt()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">intAt</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>bi_internal function intAt(str:String, index:int):int</code><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">str</span>:String</code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">index</span>:int</code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>int</code></td>
</tr>
</table>
</div>
<a name="intValue()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">intValue</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function intValue():int</code><p>
   
   </p><p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>int</code> &mdash; value as integer
   
   </td>
</tr>
</table>
</div>
<a name="invDigit()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">invDigit</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>bi_internal function invDigit():int</code><p>
   return "-1/this % 2^DB"; useful for Mont. reduction
   justification:
           xy == 1 (mod n)
           xy =  1+km
     xy(2-xy) = (1+km)(1-km)
   x[y(2-xy)] =  1-k^2.m^2
   x[y(2-xy)] == 1 (mod m^2)
   if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
   should reduce x and y(2-xy) by m^2 at each step to keep size bounded
   [XXX unit test the living shit out of this.]
   </p><p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>int</code></td>
</tr>
</table>
</div>
<a name="isEven()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">isEven</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>bi_internal function isEven():Boolean</code><p>
   true iff this is even
   </p><p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>Boolean</code></td>
</tr>
</table>
</div>
<a name="isProbablePrime()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">isProbablePrime</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function isProbablePrime(t:int):Boolean</code><p>
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">t</span>:int</code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>Boolean</code> &mdash; primality with certainty >= 1-.5^t
   
   </td>
</tr>
</table>
</div>
<a name="lShiftTo()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">lShiftTo</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>bi_internal function lShiftTo(n:int, r:<a href="BigInteger.html">BigInteger</a>):void</code><p>
   r = this << n
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">n</span>:int</code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">r</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
</div>
<a name="max()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">max</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function max(a:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a></code><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">a</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
</div>
<a name="millerRabin()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">millerRabin</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>protected function millerRabin(t:int):Boolean</code><p>
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">t</span>:int</code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>Boolean</code> &mdash; true if probably prime (HAC 4.24, Miller-Rabin)
   
   </td>
</tr>
</table>
</div>
<a name="min()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">min</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function min(a:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a></code><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">a</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
</div>
<a name="mod()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">mod</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function mod(v:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a></code><p>
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">v</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code> &mdash; 
                        this % v
   
   
                        
                     </td>
</tr>
</table>
</div>
<a name="modInt()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">modInt</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>protected function modInt(n:int):int</code><p>
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">n</span>:int</code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>int</code> &mdash; this % n, n < 2^DB
   
   </td>
</tr>
</table>
</div>
<a name="modInverse()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">modInverse</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function modInverse(m:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a></code><p>
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">m</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code> &mdash; 
                        1/this %m (HAC 14.61)
   
   
                        
                     </td>
</tr>
</table>
</div>
<a name="modPow()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">modPow</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function modPow(e:<a href="BigInteger.html">BigInteger</a>, m:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a></code><p>
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">e</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">m</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code> &mdash; 
                        this^e % m (HAC 14.85)
   
   
                        
                     </td>
</tr>
</table>
</div>
<a name="modPowInt()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">modPowInt</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function modPowInt(e:int, m:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a></code><p>
   this^e % m, 0 <= e < 2^32
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">e</span>:int</code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">m</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
</div>
<a name="multiply()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">multiply</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function multiply(a:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a></code><p>
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">a</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code> &mdash; 
                        this a
   
   
                        
                     </td>
</tr>
</table>
</div>
<a name="multiplyLowerTo()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">multiplyLowerTo</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>bi_internal function multiplyLowerTo(a:<a href="BigInteger.html">BigInteger</a>, n:int, r:<a href="BigInteger.html">BigInteger</a>):void</code><p>
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">a</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">n</span>:int</code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">r</span>:<a href="BigInteger.html">BigInteger</a></code> &mdash; = lower n words of "this a", a.t <= n
   
   </td>
</tr>
</table>
</div>
<a name="multiplyTo()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">multiplyTo</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>bi_internal function multiplyTo(v:<a href="BigInteger.html">BigInteger</a>, r:<a href="BigInteger.html">BigInteger</a>):void</code><p>
   r = this v, r != this,a (HAC 14.12)
   "this" should be the larger one if appropriate
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">v</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">r</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
</div>
<a name="multiplyUpperTo()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">multiplyUpperTo</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>bi_internal function multiplyUpperTo(a:<a href="BigInteger.html">BigInteger</a>, n:int, r:<a href="BigInteger.html">BigInteger</a>):void</code><p>
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">a</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">n</span>:int</code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">r</span>:<a href="BigInteger.html">BigInteger</a></code> &mdash; = "this a" without lower n words, n > 0
   
   </td>
</tr>
</table>
</div>
<a name="nbi()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">nbi</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>protected function nbi():*</code>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>*</code></td>
</tr>
</table>
</div>
<a name="nbits()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">nbits</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>bi_internal function nbits(x:int):int</code><p>
   returns bit length of the integer x
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">x</span>:int</code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>int</code></td>
</tr>
</table>
</div>
<a name="nbv()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">nbv</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public static function nbv(value:int):<a href="../math/BigInteger.html">BigInteger</a></code><p>
   return bigint initialized to value
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">value</span>:int</code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
</div>
<a name="negate()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">negate</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function negate():<a href="../math/BigInteger.html">BigInteger</a></code><p>
   -this
   </p><p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
</div>
<a name="not()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">not</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function not():<a href="../math/BigInteger.html">BigInteger</a></code>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
</div>
<a name="or()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">or</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function or(a:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a></code><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">a</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
</div>
<a name="pow()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">pow</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function pow(e:int):<a href="../math/BigInteger.html">BigInteger</a></code><p>
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">e</span>:int</code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code> &mdash; 
                        this^e
   
   
                        
                     </td>
</tr>
</table>
</div>
<a name="primify()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">primify</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function primify(bits:int, t:int):void</code><p>
   Tweak our BigInteger until it looks prime enough
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">bits</span>:int</code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">t</span>:int</code></td>
</tr>
</table>
</div>
<a name="remainder()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">remainder</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function remainder(a:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a></code><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">a</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
</div>
<a name="rShiftTo()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">rShiftTo</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>bi_internal function rShiftTo(n:int, r:<a href="BigInteger.html">BigInteger</a>):void</code><p>
   r = this >> n
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">n</span>:int</code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">r</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
</div>
<a name="setBit()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">setBit</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function setBit(n:int):<a href="../math/BigInteger.html">BigInteger</a></code><p>
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">n</span>:int</code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code> &mdash; 
                        this | (1<<n)
   
   
                        
                     </td>
</tr>
</table>
</div>
<a name="shiftLeft()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">shiftLeft</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function shiftLeft(n:int):<a href="../math/BigInteger.html">BigInteger</a></code><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">n</span>:int</code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
</div>
<a name="shiftRight()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">shiftRight</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function shiftRight(n:int):<a href="../math/BigInteger.html">BigInteger</a></code><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">n</span>:int</code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
</div>
<a name="shortValue()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">shortValue</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function shortValue():int</code><p>
   
   </p><p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>int</code> &mdash; value as short (assumes DB>=16)
   
   </td>
</tr>
</table>
</div>
<a name="sigNum()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">sigNum</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function sigNum():int</code><p>
   
   </p><p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>int</code> &mdash; 0 if this ==0, 1 if this >0
   
   </td>
</tr>
</table>
</div>
<a name="squareTo()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">squareTo</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>bi_internal function squareTo(r:<a href="BigInteger.html">BigInteger</a>):void</code><p>
   r = this^2, r != this (HAC 14.16)
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">r</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
</div>
<a name="subTo()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">subTo</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>bi_internal function subTo(v:<a href="BigInteger.html">BigInteger</a>, r:<a href="BigInteger.html">BigInteger</a>):void</code><p>
   r = this - v
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">v</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">r</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
</div>
<a name="subtract()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">subtract</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function subtract(a:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a></code><p>
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">a</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code> &mdash; 
                        this - a
   
   
                        
                     </td>
</tr>
</table>
</div>
<a name="testBit()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">testBit</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function testBit(n:int):Boolean</code><p>
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">n</span>:int</code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>Boolean</code> &mdash; true iff nth bit is set
   
   </td>
</tr>
</table>
</div>
<a name="toArray()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">toArray</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function toArray(array:ByteArray):uint</code><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">array</span>:ByteArray</code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>uint</code></td>
</tr>
</table>
</div>
<a name="toByteArray()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">toByteArray</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function toByteArray():ByteArray</code><p>
   
   </p><p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>ByteArray</code> &mdash; a byte array.
   
   </td>
</tr>
</table>
</div>
<a name="toRadix()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">toRadix</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>protected function toRadix(b:uint = 10):String</code><p>
   
   </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">b</span>:uint</code> (default = <code>10</code>)<code></code> &mdash; radix to use
   </td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>String</code> &mdash; a string representing the integer converted to the radix.
   
   </td>
</tr>
</table>
</div>
<a name="toString()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">toString</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function toString(radix:Number = 16):String</code><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">radix</span>:Number</code> (default = <code>16</code>)<code></code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>String</code></td>
</tr>
</table>
</div>
<a name="valueOf()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">valueOf</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function valueOf():Number</code><p>
   best-effort attempt to fit into a Number.
   precision can be lost if it just can't fit.
   </p><p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code>Number</code></td>
</tr>
</table>
</div>
<a name="xor()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">xor</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function xor(a:<a href="BigInteger.html">BigInteger</a>):<a href="../math/BigInteger.html">BigInteger</a></code><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">a</span>:<a href="BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
<p></p>
<span class="label">Returns</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20"></td><td><code><a href="../math/BigInteger.html">BigInteger</a></code></td>
</tr>
</table>
</div>
<a name="constantDetail"></a>
<div class="detailSectionHeader">Constant detail</div>
<a name="BI_FP"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">BI_FP</td><td class="detailHeaderType">constant</td>
</tr>
</table>
<div class="detailBody">
<code>public static const BI_FP:int = 52</code>
</div>
<a name="DB"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">DB</td><td class="detailHeaderType">constant</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public static const DB:int = 30</code>
</div>
<a name="DM"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">DM</td><td class="detailHeaderType">constant</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public static const DM:int</code>
</div>
<a name="DV"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">DV</td><td class="detailHeaderType">constant</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public static const DV:int</code>
</div>
<a name="F1"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">F1</td><td class="detailHeaderType">constant</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public static const F1:int = 22.0</code>
</div>
<a name="F2"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">F2</td><td class="detailHeaderType">constant</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public static const F2:int = 8.0</code>
</div>
<a name="FV"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">FV</td><td class="detailHeaderType">constant</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public static const FV:Number</code>
</div>
<a name="lowprimes"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">lowprimes</td><td class="detailHeaderType">constant</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public static const lowprimes:Array</code>
</div>
<a name="lplim"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">lplim</td><td class="detailHeaderType">constant</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public static const lplim:int</code>
</div>
<a name="ONE"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">ONE</td><td class="detailHeaderType">constant</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public static const ONE:<a href="../math/BigInteger.html">BigInteger</a></code>
</div>
<a name="ZERO"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">ZERO</td><td class="detailHeaderType">constant</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public static const ZERO:<a href="../math/BigInteger.html">BigInteger</a></code>
</div>
<br>
<br>
<hr>
<br>
<p></p>
<center class="copyright">MySpaceID AS3 SDK</center>
</div>
</body>
</html>
<!--MySpaceID AS3 SDK-->
